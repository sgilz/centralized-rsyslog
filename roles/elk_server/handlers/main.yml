---
- name: enable_restart_elasticsearch
  systemd:
    name: elasticsearch
    state: restarted
    enabled: yes

- name: enable_restart_logstash
  systemd:
    name: logstash
    state: restarted
    enabled: yes 

- name: enable_restart_kibana
  systemd:
    name: kibana
    state: restarted
    enabled: yes

# - name: Ensure first 503 code for elastic resquests
#   uri:
#     url: "http://{{ machine }}:{{ elasticsearch_port }}/cron?pretty"
#     headers:
#       Content-Type: application/json
#     timeout: 60
#     method: PUT
#     src: "indexes/{{ item }}.json"
#     status_code:
#      - 200
#      - 400
#   loop: "{{ indexes }}"
#   listen: create_indexes_mappings

- name: Create indices and mappings
  uri:
    url: "http://{{ machine }}:{{ elasticsearch_port }}/{{ item }}?pretty"
    headers:
      Content-Type: application/json
    timeout: 180
    method: PUT
    src: "indexes/{{ item }}.json"
    status_code:
     - 200
     - 400
  retries: 5
  delay: 30
  loop: "{{ indexes }}"
  listen: create_indexes_mappings

- name: Unset index replicas
  uri:
    url: "http://{{ machine }}:{{ elasticsearch_port }}/{{ item }}/_settings?pretty"
    headers:
      Content-Type: application/json
    timeout: 60
    method: PUT
    src: "indexes/settings.json"
  loop: "{{ indexes }}"
  listen: create_indexes_mappings

- name: Copy import file to remote machine
  copy:
    src: kibana_saved_objects/dashboards_and_visualizations.ndjson
    dest: /tmp/dashboards_and_visualizations.ndjson
    mode: 0644
  notify: import_dashboard

- name: Import dashboard
  shell : 'curl -X POST "http://{{ machine }}:{{ kibana_port }}/api/saved_objects/_import" \
                -H "kbn-xsrf: true" \
                -F file=@/tmp/dashboards_and_visualizations.ndjson'
  args:
    warn: false
  listen: import_dashboard
